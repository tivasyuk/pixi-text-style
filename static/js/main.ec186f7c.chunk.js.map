{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/style-reducer.js","redux/settings-reducer.js","redux/redux-store.js","hoc/withAccordion.js","components/Navbar/controls/TextControl.jsx","components/Navbar/controls/FontControl.jsx","components/Navbar/controls/FillControl.jsx","components/Navbar/controls/StrokeControl.jsx","components/Navbar/controls/LayoutControl.jsx","components/Navbar/controls/DropShadowControl.jsx","components/Navbar/controls/MultilineControl.jsx","components/Navbar/controls/TextureControl.jsx","components/Navbar/controls/BackgroundControl.jsx","components/Navbar/Navbar.jsx","components/Navbar/settings/ThemeSwitch.jsx","components/Navbar/settings/NavToggle.jsx","components/Navbar/settings/NavSettings.jsx","components/Navbar/NavbarContainer.jsx","components/JsonViewer/JsonViewerContainer.jsx","components/PixiPreview/PixiPreview.jsx","components/PixiPreview/PixiPreviewContainer.jsx","components/Navbar/settings/CheckMoveContainer.jsx","components/Preview/PreviewContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","fonts","initialState","textValue","backgroundColor","fontFamily","fontSize","fontStyle","fontVariant","fontWeight","fill","fillGradientType","fillGradientStops","stroke","strokeThickness","lineJoin","miterLimit","letterSpacing","textBaseline","dropShadow","dropShadowColor","dropShadowAlpha","dropShadowAngle","Math","PI","dropShadowBlur","dropShadowDistance","wordWrap","breakWords","align","whiteSpace","wordWrapWidth","lineHeight","leading","padding","trim","updateStyle","key","val","dispatch","type","setStyle","styleReducer","state","action","map","font","index","splice","push","navOpen","navPosition","themeColor","bgImage","bgPosX","bgPosY","bgSize","previewWidth","canvasPosX","canvasPosY","moveCanvas","updateSetting","id","value","setSetting","settingsReducer","reducers","combineReducers","styleApp","settingsApp","store","createStore","applyMiddleware","thunkMiddleware","window","withAccordion","Component","connect","props","useState","accordion","setAccordionMode","onAccordionChange","elem","onClick","className","title","compose","text","setTextValue","useEffect","onChange","e","currentTarget","fontFamilyValue","setFontFamily","fontSizeValue","setFontSize","fontStyleValue","setFontStyle","fontVariantValue","setFontVariant","fontWeightValue","setFontWeight","fontFamilyElem","toString","fontAccept","navigator","userAgent","search","Row","Col","xs","htmlFor","accept","importFontFamily","refreshFontFamily","valueAsNumber","step","min","fillColorValue","setFillColor","fillTypeValue","setFillType","fillStopsValue","setFillStops","onFillColorChange","Array","isArray","removeColor","onFillStopsChange","undefined","removeFillStops","fillElem","length","fillStopElem","max","s","colourGroup","Button","block","parseInt","strokeColorValue","setStrokeColor","strokeThicknessValue","setStrokeThickness","lineJoinValue","setLineJoin","miterLimitValue","setMiterLimit","letterSpacingValue","setLetterSpacing","textBaselineValue","setTextBaseline","dropShadowValue","setDropShadow","dropShadowColorValue","setDropShadowColor","dropShadowAlphaValue","setDropShadowAlpha","dropShadowAngleValue","setDropShadowAngle","dropShadowBlurValue","setDropShadowBlur","dropShadowDistanceValue","setDropShadowDistance","checked","wordWrapValue","setWordWrap","breakWordsValue","setBreakWords","alignValue","setAlign","whiteSpaceValue","setWhiteSpace","wordWrapWidthValue","setWordWrapWidth","lineHeightValue","setLineHeight","leadingValue","setLeading","paddingValue","setPaddingValue","trimValue","setTrimValue","addBackgroundImage","bgColorValue","setColorValue","bgSizeValue","setBgSizeValue","Navbar","settings","Container","style","animationName","setTimeout","refreshSettings","styles","ThemeSwitch","isChecked","localStorage","getItem","themeValue","setTheme","isDark","name","setItem","NavToggle","positionMenu","positionValue","setMenuPosition","Dimensions","openValue","setNavOpen","document","getElementById","width","containerWidth","NavbarContainer","target","files","file","reader","FileReader","readAsDataURL","onload","urls","result","TYPE_MAP","createElement","urlsMap","url","extName","split","pop","toLowerCase","fileType","fontName","shift","remove","textContent","join","body","appendChild","WebFont","load","custom","families","active","addFontFamily","this","React","JsonViewerContainer","initialStyles","newStyles","changedStyles","jsonStyles","importStyles","exportToJson","a","Blob","JSON","stringify","href","URL","createObjectURL","download","click","importJson","readAsText","parse","applyImportStyles","Object","keys","nextProps","nextState","nextContext","valueHtml","valueKey","valueIndex","comma","PixiPreview","PixiText","PixiComponent","create","Text","PixiPreviewContainer","height","resizePreview","preventDefault","button","which","container","canMove","addEventListener","pageX","offsetLeft","pageY","offsetTop","offsetWidth","setState","movePixiContainer","movementX","movementY","resizeBg","deltaY","getElementsByClassName","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundSize","options","transparent","onMouseDown","onWheel","x","y","CheckMoveContainer","moveCanvasValue","setMoveCanvas","checkMove","PreviewContainer","color","position","Boolean","location","hostname","match","ReactDOM","render","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec186f7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"refresh\":\"Navbar_refresh__3Envq\",\"colourGroup\":\"Navbar_colourGroup__3-2QR\"};","const RESET_SETTINGS = \"RESET_SETTINGS\";\r\nconst ADD_FONT_FAMILY = \"ADD_FONT_FAMILY\";\r\nconst RESET_FONT_FAMILY = \"RESET_FONT_FAMILY\";\r\nconst UPDATE_STYLE = \"UPDATE_STYLE\";\r\n\r\nexport let fonts = [\r\n    \"Arial\",\r\n    \"Arial Black\",\r\n    \"Comic Sans MS\",\r\n    \"Courier New\",\r\n    \"Georgia\",\r\n    \"Helvetica\",\r\n    \"Impact\",\r\n    \"Tahoma\",\r\n    \"Times New Roman\",\r\n    \"Verdana\",\r\n    \"Georgia, serif\",\r\n    \"\\\"Palatino Linotype\\\", \\\"Book Antiqua\\\", Palatino, serif\",\r\n    \"\\\"Times New Roman\\\", Times, serif\",\r\n    \"Arial, Helvetica, sans-serif\",\r\n    \"\\\"Arial Black\\\", Gadget, sans-serif\",\r\n    \"\\\"Comic Sans MS\\\", cursive, sans-serif\",\r\n    \"Impact, Charcoal, sans-serif\",\r\n    \"\\\"Lucida Sans Unicode\\\", \\\"Lucida Grande\\\", sans-serif\",\r\n    \"Tahoma, Geneva, sans-serif\",\r\n    \"\\\"Trebuchet MS\\\", Helvetica, sans-serif\",\r\n    \"Verdana, Geneva, sans-serif\",\r\n    \"\\\"Courier New\\\", Courier, monospace\",\r\n    \"\\\"Lucida Console\\\", Monaco, monospace\"\r\n];\r\n\r\nlet initialState = {\r\n    textValue: 'Hello World',\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    //font\r\n    fontFamily: 'Arial',\r\n    fontSize: 26,\r\n    fontStyle: 'normal',\r\n    fontVariant: 'normal',\r\n    fontWeight: 'normal',\r\n\r\n    //fill\r\n    fill: '#000000',\r\n    fillGradientType: 0,\r\n    fillGradientStops: [],\r\n\r\n    //stroke\r\n    stroke: '#000000',\r\n    strokeThickness: 0,\r\n    lineJoin: \"miter\",\r\n    miterLimit: 10,\r\n\r\n    //layout\r\n    letterSpacing: 0,\r\n    textBaseline: \"alphabetic\",\r\n\r\n    //drop shadow\r\n    dropShadow: false,\r\n    dropShadowColor: '#000000',\r\n    dropShadowAlpha: 1,\r\n    dropShadowAngle: Math.PI / 6,\r\n    dropShadowBlur: 0,\r\n    dropShadowDistance: 5,\r\n\r\n    //multiline\r\n    wordWrap: false,\r\n    breakWords: false,\r\n    align: \"left\",\r\n    whiteSpace: \"pre\",\r\n    wordWrapWidth: 100,\r\n    lineHeight: 0,\r\n    leading: 0,\r\n\r\n    //texture\r\n    padding: 0,\r\n    trim: false\r\n};\r\n\r\nconst styleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case RESET_SETTINGS:\r\n            return initialState;\r\n        case RESET_FONT_FAMILY:\r\n            return {\r\n                ...state,\r\n                fontFamily: initialState.fontFamily\r\n            };\r\n        case ADD_FONT_FAMILY:\r\n            fonts.map((font, index) => {\r\n                if (font === action.fontFamily) {\r\n                    fonts.splice(index, 1);\r\n                }\r\n            });\r\n            fonts.push(action.fontFamily);\r\n            return {\r\n                ...state,\r\n                fontFamily: action.fontFamily\r\n            };\r\n        case UPDATE_STYLE:\r\n            // let data = state;\r\n            // Object.keys(initialState).map((key, index) => {\r\n            //     if (key === action.key) {\r\n            //         data = {\r\n            //             ...state,\r\n            //             [action.key]: action.val\r\n            //         };\r\n            //     }\r\n            // });\r\n            // return data;\r\n            return {\r\n                ...state,\r\n                [action.key]: action.val\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst resetSettings = () => ({type: RESET_SETTINGS});\r\nconst resetFontFamily = () => ({type: RESET_FONT_FAMILY});\r\nconst setFontFamily = (fontFamily) => ({type: ADD_FONT_FAMILY, fontFamily});\r\nconst setStyle = (key, val) => ({type: UPDATE_STYLE, key, val});\r\n\r\nexport const refreshSettings = () => (dispatch) => {\r\n    dispatch(resetSettings())\r\n};\r\nexport const refreshFontFamily = () => (dispatch) => {\r\n    dispatch(resetFontFamily())\r\n};\r\nexport const addFontFamily = (fontFamily) => (dispatch) => {\r\n    dispatch(setFontFamily(fontFamily))\r\n};\r\nexport const updateStyle = (key, val) => (dispatch) => {\r\n    dispatch(setStyle(key, val))\r\n};\r\n\r\nexport default styleReducer;","const UPDATE_SETTINGS = \"UPDATE_SETTINGS\";\r\n\r\nexport const THEME_DARK = \"THEME_DARK\";\r\nexport const THEME_LIGHT = \"THEME_LIGHT\";\r\n\r\nexport const MENU_RIGHT = \"navRight\";\r\nexport const MENU_LEFT = \"navLeft\";\r\n\r\nlet initialState = {\r\n    navOpen: true,\r\n    navPosition: MENU_RIGHT,\r\n    themeColor: THEME_DARK,\r\n\r\n    bgImage: '',\r\n    bgPosX: 0,\r\n    bgPosY: 0,\r\n    bgSize: 'cover',\r\n\r\n    previewWidth: 600,\r\n    canvasPosX: 50,\r\n    canvasPosY: 50,\r\n\r\n    moveCanvas: true\r\n};\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_SETTINGS:\r\n            return {\r\n                ...state,\r\n                [action.id]: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setSetting = (id, value) => ({type: UPDATE_SETTINGS, id, value});\r\n\r\nexport const updateSetting = (id, value) => (dispatch) => {\r\n    dispatch(setSetting(id, value))\r\n};\r\n\r\nexport default settingsReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport styleReducer from \"./style-reducer\";\r\nimport settingsReducer from \"./settings-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    styleApp: styleReducer,\r\n    settingsApp: settingsReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, {Component, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAccordion = (Component) => {\r\n\r\n    const AccordionComponent = (props) => {\r\n\r\n        let [accordion, setAccordionMode] = useState(true);\r\n\r\n        const onAccordionChange = () => {\r\n            setAccordionMode(!accordion);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                {props.elem && props.elem === \"h2\"\r\n                ?\r\n                    <h2 onClick={onAccordionChange} className={`h2 accordion ${accordion ? \"expanded\" : \"collapsed\"}`}>\r\n                        {props.title}\r\n                    </h2>\r\n                :\r\n                    <h4 onClick={onAccordionChange} className={`accordion ${accordion ? \"expanded\" : \"collapsed\"}`}>\r\n                        {props.title}\r\n                    </h4>\r\n                }\r\n\r\n                <div className={`params ${accordion ? \"\" : \"hide\"}`}>\r\n                    <Component {...props} />\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    };\r\n\r\n    return connect(null)(AccordionComponent);\r\n};","import React, {useEffect, useState} from 'react';\r\nimport {compose} from \"redux\";\r\nimport {withAccordion} from \"../../../hoc/withAccordion\";\r\n\r\nconst TextControl = ({text, updateStyle}) => {\r\n\r\n    let [textValue, setTextValue] = useState(text);\r\n\r\n    useEffect( () => {\r\n        setTextValue(text);\r\n    }, [text]);\r\n\r\n    const onTextChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setTextValue(value);\r\n        updateStyle(e.currentTarget.id, value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <textarea value={textValue} onChange={onTextChange} className={\"form-control\"} id=\"textValue\" />\r\n        </div>\r\n  )\r\n};\r\n\r\nexport default compose(withAccordion)(TextControl);","import React, {useEffect, useState} from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {compose} from \"redux\";\r\nimport {withAccordion} from \"../../../hoc/withAccordion\";\r\n\r\nconst FontControl = (props) => {\r\n\r\n    let [fontFamilyValue, setFontFamily] = useState(props.fontFamily);\r\n    let [fontSizeValue, setFontSize] = useState(props.fontSize);\r\n    let [fontStyleValue, setFontStyle] = useState(props.fontStyle);\r\n    let [fontVariantValue, setFontVariant] = useState(props.fontVariant);\r\n    let [fontWeightValue, setFontWeight] = useState(props.fontWeight);\r\n\r\n    useEffect(() => {\r\n        setFontFamily(props.fontFamily);\r\n        setFontSize(props.fontSize);\r\n        setFontStyle(props.fontStyle);\r\n        setFontVariant(props.fontVariant);\r\n        setFontWeight(props.fontWeight);\r\n    }, [props.fontFamily, props.fontSize, props.fontStyle, props.fontVariant, props.fontWeight]);\r\n\r\n    const onFontFamilyChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setFontFamily(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onFontFamilyReset = () => {\r\n        props.refreshFontFamily();\r\n    };\r\n    const onFontSizeChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setFontSize(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onFontStyleChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setFontStyle(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onFontVariantChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setFontVariant(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onFontWeightChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setFontWeight(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n\r\n    const importFontFamily = (e) => {\r\n        props.importFontFamily(e);\r\n    };\r\n\r\n    let fontFamilyElem = [...props.fonts].map((value, index) => {\r\n        return (\r\n            <option value={value} key={index.toString()}>{value}</option>\r\n        )\r\n    });\r\n\r\n\r\n    let fontAccept = \".ttf, .woff, .woff2\";\r\n    if (navigator.userAgent.search(/Chrome/) > 0 ||\r\n        navigator.userAgent.search(/OPR/) > 0 ||\r\n        navigator.userAgent.search(/Safari/) > 0) {\r\n        fontAccept = \".ttf, .woff, .woff2, .svg\";\r\n    }\r\n    if (navigator.userAgent.search(/Firefox/) > 0) {\r\n        fontAccept = \".ttf, .otf, .woff, .woff2\";\r\n    }\r\n    if (navigator.userAgent.search(/MSIE/) > 0 ||\r\n        navigator.userAgent.search(/NET CLR /) > 0 ||\r\n        navigator.userAgent.search(/Edge/) > 0) {\r\n        fontAccept = \".ttf, .otf, .woff, .eot\";\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"fontFamily\" title=\"fontFamily\">Font Family</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <select value={fontFamilyValue} onChange={onFontFamilyChange} className={\"form-control\"} id=\"fontFamily\">\r\n                        {fontFamilyElem}\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}></Col>\r\n                <Col xs={7}>\r\n                    <div className=\"btn-group btn-group-xs btn-group-full\">\r\n                        <button title=\"Add local custom fonts\" className=\"btn btn-primary btn-file\">\r\n                            <input type=\"file\" accept={fontAccept} onChange={importFontFamily}/>\r\n                            <i className=\"uil uil-plus\"></i> Add\r\n                        </button>\r\n                        <button title=\"Clear all customs fonts\" className=\"btn btn-primary\" onClick={onFontFamilyReset}>\r\n                            <i className=\"uil uil-multiply\"></i> Clear\r\n                        </button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"fontSize\" title=\"fontSize\">Font Size</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input value={fontSizeValue} onChange={onFontSizeChange} className={\"form-control\"}\r\n                           type={\"number\"} step=\"1\" min=\"1\" id=\"fontSize\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"fontStyle\" title=\"fontStyle\">Font Style</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <select value={fontStyleValue} onChange={onFontStyleChange} className={\"form-control\"} id=\"fontStyle\">\r\n                        <option value=\"normal\">normal</option>\r\n                        <option value=\"italic\">italic</option>\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"fontVariant\" title=\"fontVariant\">Font Variant</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <select value={fontVariantValue} onChange={onFontVariantChange} className={\"form-control\"} id=\"fontVariant\">\r\n                        <option value=\"normal\">normal</option>\r\n                        <option value=\"small-caps\">small-caps</option>\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"fontWeight\" title=\"fontWeight\">Font Weight</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <select value={fontWeightValue} onChange={onFontWeightChange} className={\"form-control\"} id=\"fontWeight\">\r\n                        <option value=\"normal\">normal</option>\r\n                        <option value=\"bold\">bold</option>\r\n                        <option value=\"bolder\">bolder</option>\r\n                        <option value=\"lighter\">lighter</option>\r\n                        <option value=\"100\">100</option>\r\n                        <option value=\"200\">200</option>\r\n                        <option value=\"300\">300</option>\r\n                        <option value=\"400\">400</option>\r\n                        <option value=\"500\">500</option>\r\n                        <option value=\"600\">600</option>\r\n                        <option value=\"700\">700</option>\r\n                        <option value=\"800\">800</option>\r\n                        <option value=\"900\">900</option>\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default compose(withAccordion)(FontControl);","import React, {useEffect, useState} from 'react';\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport {compose} from \"redux\";\r\nimport {withAccordion} from \"../../../hoc/withAccordion\";\r\nimport s from './../Navbar.module.css';\r\n\r\nconst FillControl = (props) => {\r\n\r\n    let [fillColorValue, setFillColor] = useState(props.fill);\r\n    let [fillTypeValue, setFillType] = useState(props.fillGradientType);\r\n    let [fillStopsValue, setFillStops] = useState(props.fillGradientStops);\r\n\r\n    useEffect(() => {\r\n        setFillColor(props.fill);\r\n        setFillType(props.fillGradientType);\r\n        setFillStops(props.fillGradientStops);\r\n    }, [props.fill, props.fillGradientType, props.fillGradientStops]);\r\n\r\n    const onFillColorChange = (index = 0) => (e) => {\r\n        let value = e.currentTarget.value;\r\n\r\n        let val = value;\r\n        if (!value) {\r\n            value = \"#000000\";\r\n            val = [fillColorValue, value];\r\n        }\r\n        if (Array.isArray(props.fill)) {\r\n            val = [...fillColorValue];\r\n            val[index] = value;\r\n        }\r\n\r\n        setFillColor(val);\r\n        props.updateStyle(e.currentTarget.id, val);\r\n    };\r\n    const removeColor = (index) => (e) => {\r\n        let val = [...fillColorValue];\r\n        val.splice(index, 1);\r\n\r\n        setFillColor(val);\r\n        props.updateStyle(\"fill\", val);\r\n    };\r\n\r\n    const onFillTypeChange = (e) => {\r\n        let value = parseInt(e.currentTarget.value);\r\n        setFillType(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n\r\n    const onFillStopsChange = (index = 0) => (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n\r\n        let val = value;\r\n        if (value === undefined) {\r\n            value = 1;\r\n            val = [fillStopsValue, value];\r\n        }\r\n        if (Array.isArray(props.fillGradientStops)) {\r\n            val = [...fillStopsValue];\r\n            val[index] = value;\r\n        }\r\n\r\n        setFillStops(val);\r\n        props.updateStyle(e.currentTarget.id, val);\r\n    };\r\n    const removeFillStops = (index) => () => {\r\n        let val = [...fillStopsValue];\r\n        val.splice(index, 1);\r\n\r\n        setFillStops(val);\r\n        props.updateStyle(\"fillGradientStops\", val);\r\n    };\r\n\r\n    let fillElem = <input value={fillColorValue} onChange={onFillColorChange(0)} className={\"form-control color\"}\r\n                          type={\"color\"} id=\"fill\"/>;\r\n    if (Array.isArray(props.fill) && props.fill.length > 1) {\r\n        fillElem = [...props.fill].map((value, index) => {\r\n            return <div className={\"input-group\"} key={index.toString()}>\r\n                <input value={fillColorValue[index]} onChange={onFillColorChange(index)} className={\"form-control color\"}\r\n                       type={\"color\"} id=\"fill\"/>\r\n                <button onClick={removeColor(index)}>X</button>\r\n            </div>\r\n        });\r\n    }\r\n\r\n    let fillStopElem = [...props.fillGradientStops].map((value, index) => {\r\n        return (\r\n            <div className={\"input-group\"} key={index.toString()}>\r\n                <input value={fillStopsValue[index]} onChange={onFillStopsChange(index)} className={\"form-control\"} id=\"fillGradientStops\"\r\n                       type={\"number\"} step=\"0.1\" min=\"0\" max=\"1\"/>\r\n                <button onClick={removeFillStops(index)}>X</button>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"color\" title=\"color\">Color</label>\r\n                </Col>\r\n                <Col xs={7} className={s.colourGroup}>\r\n                    {fillElem}\r\n                    <Button onClick={onFillColorChange(fillColorValue.length)} className=\"btn-sm\" block id=\"fill\">\r\n                        <i className=\"uil uil-plus\"></i> Add Color\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"fillGradientType\" title=\"fillGradientType\">Gradient Type</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <select value={fillTypeValue} onChange={onFillTypeChange} className={\"form-control\"}\r\n                            id=\"fillGradientType\">\r\n                        <option value=\"0\">linear vertical</option>\r\n                        <option value=\"1\">linear horizontal</option>\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"fillStops\" title=\"fillStops\">Fill Gradient Stops</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    {fillStopElem}\r\n                    <Button onClick={onFillStopsChange(fillStopsValue.length)} className=\"btn-sm\" block id=\"fillGradientStops\">\r\n                        <i className=\"uil uil-plus\"></i> Add Stop Point\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default compose(withAccordion)(FillControl);","import React, {useEffect, useState} from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {compose} from \"redux\";\r\nimport {withAccordion} from \"../../../hoc/withAccordion\";\r\n\r\nconst StrokeControl = (props) => {\r\n\r\n    let [strokeColorValue, setStrokeColor] = useState(props.stroke);\r\n    let [strokeThicknessValue, setStrokeThickness] = useState(props.strokeThickness);\r\n    let [lineJoinValue, setLineJoin] = useState(props.lineJoin);\r\n    let [miterLimitValue, setMiterLimit] = useState(props.miterLimit);\r\n\r\n    useEffect(() => {\r\n        setStrokeColor(props.stroke);\r\n        setStrokeThickness(props.strokeThickness);\r\n        setLineJoin(props.lineJoin);\r\n        setMiterLimit(props.miterLimit);\r\n    }, [props.stroke, props.strokeThickness, props.lineJoin, props.miterLimit]);\r\n\r\n    const onStrokeColorChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setStrokeColor(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onStrokeThicknessChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setStrokeThickness(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onLineJoinChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setLineJoin(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onMiterLimitChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setMiterLimit(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"stroke\" title=\"stroke\">Color</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input value={strokeColorValue} onChange={onStrokeColorChange} className={\"form-control color\"} id=\"stroke\"\r\n                           type={\"color\"}/>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"strokeThickness\" title=\"strokeThickness\">Thickness</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input value={strokeThicknessValue} onChange={onStrokeThicknessChange} className={\"form-control\"}\r\n                           type={\"number\"} step=\"1\" min=\"0\" id=\"strokeThickness\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"lineJoin\" title=\"lineJoin\">Line Join</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <select value={lineJoinValue} onChange={onLineJoinChange} className={\"form-control\"} id=\"lineJoin\">\r\n                        <option value=\"miter\">miter</option>\r\n                        <option value=\"round\">round</option>\r\n                        <option value=\"bevel\">bevel</option>\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"miterLimit\" title=\"miterLimit\">Miter Limit</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input value={miterLimitValue} onChange={onMiterLimitChange} className={\"form-control\"}\r\n                           type={\"number\"} step=\"1\" min=\"0\" id=\"miterLimit\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default compose(withAccordion)(StrokeControl);","import React, {useEffect, useState} from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {compose} from \"redux\";\r\nimport {withAccordion} from \"../../../hoc/withAccordion\";\r\n\r\nconst LayoutControl = (props) => {\r\n\r\n    let [letterSpacingValue, setLetterSpacing] = useState(props.letterSpacing);\r\n    let [textBaselineValue, setTextBaseline] = useState(props.textBaseline);\r\n\r\n    useEffect(() => {\r\n        setLetterSpacing(props.letterSpacing);\r\n        setTextBaseline(props.textBaseline);\r\n    }, [props.letterSpacing, props.textBaseline]);\r\n\r\n\r\n    const onLetterSpacingChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setLetterSpacing(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onTextBaselineChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setTextBaseline(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"letterSpacing\" title=\"letterSpacing\">Letter Spacing</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input value={letterSpacingValue} onChange={onLetterSpacingChange} className={\"form-control\"}\r\n                           type={\"number\"} step=\"1\" min=\"0\" id=\"letterSpacing\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"textBaseline\" title=\"textBaseline\">Text Baseline</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <select value={textBaselineValue} onChange={onTextBaselineChange} className={\"form-control\"} id=\"textBaseline\">\r\n                        <option value=\"alphabetic\">alphabetic</option>\r\n                        <option value=\"bottom\">bottom</option>\r\n                        <option value=\"middle\">middle</option>\r\n                        <option value=\"top\">top</option>\r\n                        <option value=\"hanging\">hanging</option>\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default compose(withAccordion)(LayoutControl);","import React, {useEffect, useState} from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {compose} from \"redux\";\r\nimport {withAccordion} from \"../../../hoc/withAccordion\";\r\n\r\nconst DropShadowControl = (props) => {\r\n\r\n    let [dropShadowValue, setDropShadow] = useState(props.dropShadow);\r\n    let [dropShadowColorValue, setDropShadowColor] = useState(props.dropShadowColor);\r\n    let [dropShadowAlphaValue, setDropShadowAlpha] = useState(props.dropShadowAlpha);\r\n    let [dropShadowAngleValue, setDropShadowAngle] = useState(props.dropShadowAngle);\r\n    let [dropShadowBlurValue, setDropShadowBlur] = useState(props.dropShadowBlur);\r\n    let [dropShadowDistanceValue, setDropShadowDistance] = useState(props.dropShadowDistance);\r\n\r\n    useEffect(() => {\r\n        setDropShadow(props.dropShadow);\r\n        setDropShadowColor(props.dropShadowColor);\r\n        setDropShadowAlpha(props.dropShadowAlpha);\r\n        setDropShadowAngle(props.dropShadowAngle);\r\n        setDropShadowBlur(props.dropShadowBlur);\r\n        setDropShadowDistance(props.dropShadowDistance);\r\n    }, [props.dropShadow, props.dropShadowColor, props.dropShadowAlpha, props.dropShadowAngle, props.dropShadowBlur, props.dropShadowDistance]);\r\n\r\n    const onDropShadowChange = (e) => {\r\n        setDropShadow(!dropShadowValue);\r\n        props.updateStyle(e.currentTarget.id, !dropShadowValue);\r\n    };\r\n    const onDropShadowColorChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setDropShadowColor(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onDropShadowAlphaChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setDropShadowAlpha(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onDropShadowAngleChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setDropShadowAngle(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onDropShadowBlurChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setDropShadowBlur(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onDropShadowDistanceChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setDropShadowDistance(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"dropShadow\" title=\"dropShadow\">Enable</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input checked={dropShadowValue} onChange={onDropShadowChange} className={\"form-control\"}\r\n                           type={\"checkbox\"} id=\"dropShadow\"/>\r\n                </Col>\r\n            </Row>\r\n            {dropShadowValue &&\r\n            <div>\r\n                <Row>\r\n                    <Col xs={5}>\r\n                        <label htmlFor=\"dropShadowColor\" title=\"dropShadowColor\">Color</label>\r\n                    </Col>\r\n                    <Col xs={7}>\r\n                        <input value={dropShadowColorValue} onChange={onDropShadowColorChange}\r\n                               className={\"form-control color\"} id=\"dropShadowColor\"\r\n                               type={\"color\"}/>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={5}>\r\n                        <label htmlFor=\"dropShadowAlpha\" title=\"dropShadowAlpha\">Alpha</label>\r\n                    </Col>\r\n                    <Col xs={7}>\r\n                        <input value={dropShadowAlphaValue} onChange={onDropShadowAlphaChange}\r\n                               className={\"form-control\"}\r\n                               type={\"number\"} step=\"0.1\" min=\"0\" max=\"1\" id=\"dropShadowAlpha\"/>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={5}>\r\n                        <label htmlFor=\"dropShadowAngle\" title=\"dropShadowAngle\">Angle</label>\r\n                    </Col>\r\n                    <Col xs={7}>\r\n                        <input value={dropShadowAngleValue} onChange={onDropShadowAngleChange}\r\n                               className={\"form-control\"}\r\n                               type={\"number\"} step=\"0.1\" id=\"dropShadowAngle\"/>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={5}>\r\n                        <label htmlFor=\"dropShadowBlur\" title=\"dropShadowBlur\">Blur</label>\r\n                    </Col>\r\n                    <Col xs={7}>\r\n                        <input value={dropShadowBlurValue} onChange={onDropShadowBlurChange} className={\"form-control\"}\r\n                               type={\"number\"} step=\"1\" id=\"dropShadowBlur\"/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={5}>\r\n                        <label htmlFor=\"dropShadowDistance\" title=\"dropShadowDistance\">Distance</label>\r\n                    </Col>\r\n                    <Col xs={7}>\r\n                        <input value={dropShadowDistanceValue} onChange={onDropShadowDistanceChange}\r\n                               className={\"form-control\"}\r\n                               type={\"number\"} step=\"1\" id=\"dropShadowDistance\"/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default compose(withAccordion)(DropShadowControl);","import React, {useEffect, useState} from 'react';\r\nimport {compose} from \"redux\";\r\nimport {withAccordion} from \"../../../hoc/withAccordion\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\nconst MultilineControl = (props) => {\r\n\r\n    let [wordWrapValue, setWordWrap] = useState(props.wordWrap);\r\n    let [breakWordsValue, setBreakWords] = useState(props.breakWords);\r\n    let [alignValue, setAlign] = useState(props.align);\r\n    let [whiteSpaceValue, setWhiteSpace] = useState(props.whiteSpace);\r\n    let [wordWrapWidthValue, setWordWrapWidth] = useState(props.wordWrapWidth);\r\n    let [lineHeightValue, setLineHeight] = useState(props.lineHeight);\r\n    let [leadingValue, setLeading] = useState(props.leading);\r\n\r\n    useEffect( () => {\r\n        setWordWrap(props.wordWrap);\r\n        setBreakWords(props.breakWords);\r\n        setAlign(props.align);\r\n        setWhiteSpace(props.whiteSpace);\r\n        setWordWrapWidth(props.wordWrapWidth);\r\n        setLineHeight(props.lineHeight);\r\n        setLeading(props.leading);\r\n    }, [props.wordWrap, props.breakWords, props.align, props.whiteSpace, props.wordWrapWidth, props.lineHeight, props.leading]);\r\n\r\n    const onWordWrapChange = (e) => {\r\n        setWordWrap(!wordWrapValue);\r\n        props.updateStyle(e.currentTarget.id, !wordWrapValue);\r\n    };\r\n    const onBreakWordsChange = (e) => {\r\n        setWordWrap(!breakWordsValue);\r\n        props.updateStyle(e.currentTarget.id, !breakWordsValue);\r\n    };\r\n    const onAlignChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setAlign(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onWhiteSpaceChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setWhiteSpace(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onWordWrapWidthChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setWordWrapWidth(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onLineHeightChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setLineHeight(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n    const onLeadingChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setLeading(value);\r\n        props.updateStyle(e.currentTarget.id, value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"wordWrap\" title=\"wordWrap\">Enable Word Wrap</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input checked={wordWrapValue} onChange={onWordWrapChange} className={\"form-control\"}\r\n                           type={\"checkbox\"} id=\"wordWrap\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"breakWords\" title=\"breakWords\">Break Words</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input checked={breakWordsValue} onChange={onBreakWordsChange} className={\"form-control\"}\r\n                           type={\"checkbox\"} id=\"breakWords\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"align\" title=\"align\">Align</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <select value={alignValue} onChange={onAlignChange} className={\"form-control\"} id=\"align\">\r\n                        <option value=\"left\">left</option>\r\n                        <option value=\"center\">center</option>\r\n                        <option value=\"right\">right</option>\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"whiteSpace\" title=\"whiteSpace\">White Space</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <select value={whiteSpaceValue} onChange={onWhiteSpaceChange} className={\"form-control\"} id=\"whiteSpace\">\r\n                        <option value=\"normal\">normal</option>\r\n                        <option value=\"pre\">pre</option>\r\n                        <option value=\"pre-line\">pre-line</option>\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"wordWrapWidth\" title=\"wordWrapWidth\">Wrap Width</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input value={wordWrapWidthValue} onChange={onWordWrapWidthChange} className={\"form-control\"}\r\n                           type={\"number\"} step=\"10\" min=\"0\" id=\"wordWrapWidth\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"lineHeight\" title=\"lineHeight\">Line Height</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input value={lineHeightValue} onChange={onLineHeightChange} className={\"form-control\"}\r\n                           type={\"number\"} step=\"1\" min=\"0\" id=\"lineHeight\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"leading\" title=\"leading\">Leading</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input value={leadingValue} onChange={onLeadingChange} className={\"form-control\"}\r\n                           type={\"number\"} step=\"1\" min=\"0\" id=\"leading\" />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n  )\r\n};\r\n\r\nexport default compose(withAccordion)(MultilineControl);","import React, {useEffect, useState} from 'react';\r\nimport {compose} from \"redux\";\r\nimport {withAccordion} from \"../../../hoc/withAccordion\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\nconst TextureControl = ({padding, trim, updateStyle}) => {\r\n\r\n    let [paddingValue, setPaddingValue] = useState(padding);\r\n    let [trimValue, setTrimValue] = useState(trim);\r\n\r\n    useEffect( () => {\r\n        setPaddingValue(padding);\r\n        setTrimValue(trim);\r\n    }, [padding, trim]);\r\n\r\n    const onPaddingChange = (e) => {\r\n        let value = e.currentTarget.valueAsNumber;\r\n        setPaddingValue(value);\r\n        updateStyle(e.currentTarget.id, value)\r\n    };\r\n    const onTrimChange = (e) => {\r\n        setTrimValue(!trimValue);\r\n        updateStyle(e.currentTarget.id, !trimValue)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"padding\" title=\"padding\">Padding</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input value={paddingValue} onChange={onPaddingChange} className={\"form-control\"}\r\n                           type={\"number\"} step=\"1\" id=\"padding\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"trim\" title=\"trim\">Trim</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input checked={trimValue} onChange={onTrimChange} className={\"form-control\"}\r\n                           type={\"checkbox\"} id=\"trim\" />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n  )\r\n};\r\n\r\nexport default compose(withAccordion)(TextureControl);","import React, {useEffect, useState} from 'react';\r\nimport {compose} from \"redux\";\r\nimport {withAccordion} from \"../../../hoc/withAccordion\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\nconst BackgroundControl = ({backgroundColor, updateStyle, addBackgroundImage, updateSetting, bgImage, bgSize}) => {\r\n\r\n    let [bgColorValue, setColorValue] = useState(backgroundColor);\r\n    let [bgSizeValue, setBgSizeValue] = useState(bgSize);\r\n\r\n    useEffect(() => {\r\n        setColorValue(backgroundColor);\r\n        setBgSizeValue(bgSize);\r\n    }, [backgroundColor, bgSize]);\r\n\r\n    const onBgChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setColorValue(value);\r\n        updateStyle(e.currentTarget.id, value);\r\n    };\r\n\r\n    const addBackgroundPhoto = (e) => {\r\n        addBackgroundImage(e);\r\n    };\r\n    const removeBackgroundPhoto = (e) => {\r\n        updateSetting(e.currentTarget.id, '');\r\n        updateSetting('moveCanvas', true);\r\n    };\r\n\r\n    const onBgSizeChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setBgSizeValue(value);\r\n        updateSetting(e.currentTarget.id, value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"bgColor\" title=\"bgColor\">Color</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <input value={bgColorValue} onChange={onBgChange} className={\"form-control color\"}\r\n                           id=\"backgroundColor\"\r\n                           type={\"color\"}/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={5}>\r\n                    <label htmlFor=\"addBgImage\" title=\"addBgImage\">Image</label>\r\n                </Col>\r\n                <Col xs={7}>\r\n                    <button title=\"Add background photo\" className=\"btn-sm btn btn-primary btn-block btn-file addBgBtn\">\r\n                        <input type=\"file\" accept={\".jpg, jpeg, .png\"} onChange={addBackgroundPhoto} id={\"addBgImage\"}/>\r\n                        <i className=\"uil uil-image-plus\"></i>\r\n                    </button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {!!bgImage &&\r\n\r\n            <div>\r\n                <Row>\r\n                    <Col xs={5}>\r\n                    </Col>\r\n                    <Col xs={7}>\r\n                        <button title=\"Remove background photo\" className=\"btn-sm btn btn-primary btn-block\"\r\n                                onClick={removeBackgroundPhoto} id={\"bgImage\"}>\r\n                                <i className=\"uil uil-multiply\"></i> remove image\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={5}>\r\n                        <label htmlFor=\"bgSize\" title=\"bgSize\">Bg img Size</label>\r\n                    </Col>\r\n                    <Col xs={7}>\r\n                        <input value={bgSizeValue} onChange={onBgSizeChange} className={\"form-control\"}\r\n                               type={\"text\"} id=\"bgSize\"/>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </div>\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default compose(withAccordion)(BackgroundControl);","import React from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport TextControl from \"./controls/TextControl\";\r\nimport FontControl from \"./controls/FontControl\";\r\nimport FillControl from \"./controls/FillControl\";\r\nimport StrokeControl from \"./controls/StrokeControl\";\r\nimport LayoutControl from \"./controls/LayoutControl\";\r\nimport DropShadowControl from \"./controls/DropShadowControl\";\r\nimport MultilineControl from \"./controls/MultilineControl\";\r\nimport TextureControl from \"./controls/TextureControl\";\r\nimport BackgroundControl from \"./controls/BackgroundControl\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const refreshPage = (e) => {\r\n        let elem = e.currentTarget;\r\n        elem.style.animationName = \"rotation\";\r\n        setTimeout( () => {\r\n            elem.style.animationName = \"none\";\r\n        }, 500);\r\n        props.refreshSettings();\r\n    };\r\n\r\n    return (\r\n        <nav className={`nav ${props.settings.navOpen ? \"menuOpen\" : \"menuClose\"}`}>\r\n            <Container>\r\n                <h3 className=\"title\">PixiJS TextStyle\r\n                    <div onClick={refreshPage} className=\"refreshBtn\">\r\n                        <i className=\"uil uil-sync\"></i>\r\n                    </div>\r\n                </h3>\r\n\r\n                <TextControl title={\"Text\"} updateStyle={props.updateStyle}\r\n                             text={props.styles.textValue}\r\n                />\r\n                <FontControl title={\"Font\"} updateStyle={props.updateStyle} refreshFontFamily={props.refreshFontFamily}\r\n                             importFontFamily={props.importFontFamily} fonts={props.fonts}\r\n                             fontFamily={props.styles.fontFamily}\r\n                             fontSize={props.styles.fontSize}\r\n                             fontStyle={props.styles.fontStyle}\r\n                             fontVariant={props.styles.fontVariant}\r\n                             fontWeight={props.styles.fontWeight}\r\n                />\r\n                <FillControl title={\"Fill\"} updateStyle={props.updateStyle}\r\n                             fill={props.styles.fill}\r\n                             fillGradientType={props.styles.fillGradientType}\r\n                             fillGradientStops={props.styles.fillGradientStops}\r\n                />\r\n                <StrokeControl title={\"Stroke\"} updateStyle={props.updateStyle}\r\n                               stroke={props.styles.stroke}\r\n                               strokeThickness={props.styles.strokeThickness}\r\n                               lineJoin={props.styles.lineJoin}\r\n                               miterLimit={props.styles.miterLimit}\r\n                />\r\n                <LayoutControl title={\"Layout\"} updateStyle={props.updateStyle}\r\n                               letterSpacing={props.styles.letterSpacing}\r\n                               textBaseline={props.styles.textBaseline}\r\n                />\r\n                <DropShadowControl title={\"Drop Shadow\"} updateStyle={props.updateStyle}\r\n                                   dropShadow={props.styles.dropShadow}\r\n                                   dropShadowColor={props.styles.dropShadowColor}\r\n                                   dropShadowAlpha={props.styles.dropShadowAlpha}\r\n                                   dropShadowAngle={props.styles.dropShadowAngle}\r\n                                   dropShadowBlur={props.styles.dropShadowBlur}\r\n                                   dropShadowDistance={props.styles.dropShadowDistance}\r\n                />\r\n                <MultilineControl title={\"Multiline\"} updateStyle={props.updateStyle}\r\n                                  wordWrap={props.styles.wordWrap}\r\n                                  breakWords={props.styles.breakWords}\r\n                                  align={props.styles.align}\r\n                                  whiteSpace={props.styles.whiteSpace}\r\n                                  wordWrapWidth={props.styles.wordWrapWidth}\r\n                                  lineHeight={props.styles.lineHeight}\r\n                                  leading={props.styles.leading}\r\n                />\r\n                <TextureControl title={\"Texture\"} updateStyle={props.updateStyle}\r\n                                padding={props.styles.padding}\r\n                                trim={props.styles.trim}\r\n                />\r\n                <BackgroundControl title={\"Background\"} updateStyle={props.updateStyle}\r\n                                   backgroundColor={props.styles.backgroundColor}\r\n                                   bgImage={props.settings.bgImage}\r\n                                   bgSize={props.settings.bgSize}\r\n                                   addBackgroundImage={props.addBackgroundImage}\r\n                                   updateSetting={props.updateSetting}\r\n                />\r\n            </Container>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React, {useEffect, useState} from 'react';\r\nimport {THEME_DARK, THEME_LIGHT} from \"../../../redux/settings-reducer\";\r\n\r\nconst ThemeSwitch = ({settings, updateSetting}) => {\r\n\r\n    let isChecked = localStorage.getItem('themeColor') || settings.themeColor;\r\n\r\n    let [themeValue, setTheme] = useState(isChecked);\r\n\r\n    useEffect(() => {\r\n        setTheme(isChecked);\r\n    }, [isChecked]);\r\n\r\n    let isDark = themeValue === THEME_DARK;\r\n\r\n    const toggleColor = (e) => {\r\n        let val = isDark ? THEME_LIGHT : THEME_DARK;\r\n        setTheme(val);\r\n        updateSetting(\"themeColor\", val);\r\n        localStorage.setItem('themeColor', val);\r\n    };\r\n\r\n    return (\r\n        <div className={\"themeToggle\"}>\r\n\r\n            {/*<div><small>Dark Theme</small></div>*/}\r\n            {/*<label className=\"switch\">*/}\r\n            {/*    <input type=\"checkbox\" checked={isDark} onChange={toggleColor} />*/}\r\n            {/*        <span className=\"slider round\"></span>*/}\r\n            {/*</label>*/}\r\n\r\n\r\n            <div className={\"checkboxTools\"}>\r\n                <input className=\"checkbox\" type=\"checkbox\" name=\"general\" id=\"general\" checked={!isDark} onChange={toggleColor} />\r\n                <label className=\"for-checkbox\" htmlFor=\"general\"></label>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ThemeSwitch;","import React, {useEffect, useState} from 'react';\r\nimport {MENU_LEFT, MENU_RIGHT} from \"../../../redux/settings-reducer\";\r\n\r\nconst NavToggle = ({settings, updateSetting}) => {\r\n\r\n    let positionMenu = localStorage.getItem('navPosition') || settings.navPosition;\r\n\r\n    let [positionValue, setMenuPosition] = useState(positionMenu);\r\n\r\n    useEffect(() => {\r\n        setMenuPosition(positionMenu);\r\n    }, [positionMenu]);\r\n\r\n    const changeMenuPosition = (e) => {\r\n        let val = positionValue === MENU_RIGHT ? MENU_LEFT : MENU_RIGHT;\r\n        setMenuPosition(val);\r\n        updateSetting('navPosition', val);\r\n        localStorage.setItem('navPosition', val);\r\n    };\r\n    return (\r\n        <div className={\"navToggle\"}>\r\n            <div className={`icon menuPosition ${positionValue}`} onClick={changeMenuPosition}>\r\n                <span></span>\r\n                <span></span>\r\n                {/*<span></span>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NavToggle;","import React, {useEffect, useState} from 'react';\r\nimport ThemeSwitch from \"./ThemeSwitch\";\r\nimport {compose} from \"redux\";\r\nimport Dimensions from 'react-dimensions'\r\nimport NavToggle from \"./NavToggle\";\r\n\r\nconst NavSettings = (props) => {\r\n    let [openValue, setNavOpen] = useState(props.settings.navOpen);\r\n\r\n    useEffect(() => {\r\n        setNavOpen(props.settings.navOpen);\r\n    }, [props.settings.navOpen]);\r\n\r\n    const toggleMenu = (e) => {\r\n        let elem = document.getElementById(\"canvasContainer\");\r\n        elem.style.width = openValue ? props.containerWidth - 30 + 'px' : props.containerWidth - 370 + 'px';\r\n        props.updateSetting('previewWidth', openValue ? props.containerWidth - 30 : props.containerWidth - 370);\r\n\r\n        setNavOpen(!openValue);\r\n        props.updateSetting('navOpen', !openValue);\r\n    };\r\n\r\n    return (\r\n        <div className={`settingButtons ${openValue ? \"menuOpen\" : \"menuClose\"}`}>\r\n\r\n            <NavToggle settings={props.settings} updateSetting={props.updateSetting}/>\r\n\r\n            <ThemeSwitch settings={props.settings} updateSetting={props.updateSetting}/>\r\n\r\n            <div className={\"navToggle\"} >\r\n                <div className={`icon menuToggle ${openValue ? 'open' : ''}`} onClick={toggleMenu}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default compose(\r\n    Dimensions()\r\n)(NavSettings);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport WebFont from \"webfontloader\";\r\nimport {addFontFamily, fonts, refreshFontFamily, refreshSettings, updateStyle} from \"../../redux/style-reducer\";\r\nimport Navbar from \"./Navbar\";\r\nimport NavSettings from \"./settings/NavSettings\";\r\nimport {updateSetting} from \"../../redux/settings-reducer\";\r\n\r\nclass NavbarContainer extends React.Component {\r\n\r\n    importFontFamily = (e) => {\r\n        if (e.target.files.length) {\r\n            const file = (typeof e.target === 'undefined') ? e[0] : e.target.files[0];\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = (e) => {\r\n\r\n                let name = file.name,\r\n                    urls = e.target.result;\r\n\r\n                const TYPE_MAP = {\r\n                    \".eot\": \"embedded-opentype\",\r\n                    \".ttf\": \"truetype\",\r\n                    \".ttc\": \"truetype\",\r\n                    \".woff\": \"woff\",\r\n                    \".svg\": \"svg\",\r\n                    \".woff2\": \"woff2\",\r\n                    \".otf\": \"opentype\"\r\n                };\r\n\r\n                let fontStyle = document.createElement(\"style\");\r\n                fontStyle.type = \"text/css\";\r\n\r\n                if (!Array.isArray(urls)) {\r\n                    urls = [urls];\r\n                }\r\n\r\n                let urlsMap = urls.map(url => {\r\n                    let extName = \".\" + name.split(\".\").pop().toLowerCase();\r\n                    let fileType = TYPE_MAP[extName] || \"\";\r\n\r\n                    return `url('${url}') format('${fileType}')`;\r\n                });\r\n\r\n                let fontName = name.split(\".\").shift();\r\n\r\n                if (document.getElementById(fontName)) {\r\n                    document.getElementById(fontName).remove();\r\n                }\r\n\r\n                fontStyle.id = `${fontName}`;\r\n                fontStyle.textContent = `@font-face { font-family:${fontName}; src: ${urlsMap.join(\",\")};}`;\r\n\r\n                document.body.appendChild(fontStyle);\r\n\r\n                WebFont.load({\r\n                    custom: {\r\n                        families: [fontName]\r\n                    },\r\n                    active: () => {\r\n                        this.props.addFontFamily(fontName);\r\n                    }\r\n                });\r\n            };\r\n        }\r\n    };\r\n\r\n    addBackgroundImage = (e) => {\r\n        if (e.target.files.length) {\r\n            const file = (typeof e.target === 'undefined') ? e[0] : e.target.files[0];\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = (e) => {\r\n                this.props.updateSetting('bgImage', reader.result);\r\n            };\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <div className={\"navWrapper\"}>\r\n            <NavSettings settings={this.props.settings}\r\n                         updateSetting={this.props.updateSetting}\r\n\r\n            />\r\n\r\n            <Navbar {...this.props} importFontFamily={this.importFontFamily}\r\n                    addBackgroundImage={this.addBackgroundImage}\r\n                    updateSetting={this.props.updateSetting}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    styles: state.styleApp,\r\n    fonts: fonts,\r\n    settings: state.settingsApp\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    refreshSettings,\r\n    refreshFontFamily,\r\n    addFontFamily,\r\n    updateStyle,\r\n    updateSetting\r\n})(NavbarContainer);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {updateStyle} from \"../../redux/style-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAccordion} from \"../../hoc/withAccordion\";\r\n\r\nclass JsonViewerContainer extends React.Component {\r\n    initialStyles = {};\r\n    newStyles = {};\r\n    changedStyles = {};\r\n    jsonStyles = null;\r\n    importStyles = null;\r\n\r\n    componentDidMount() {\r\n        this.initialStyles = {\r\n            ...this.props.styles\r\n        };\r\n    }\r\n\r\n    exportToJson = () => {\r\n        let a = document.createElement(\"a\");\r\n        let file = new Blob([JSON.stringify(this.changedStyles, null, 2)], {type: \"text/plain\"});\r\n        a.href = URL.createObjectURL(file);\r\n        a.download = \"style.json\";\r\n        a.click();\r\n    };\r\n\r\n\r\n    importJson = (e) => {\r\n        if (e.target.files.length) {\r\n            const file = (typeof e.target === 'undefined') ? e[0] : e.target.files[0];\r\n            let reader = new FileReader();\r\n            reader.readAsText(file);\r\n            reader.onload = (e) => {\r\n                this.importStyles = JSON.parse(e.target.result);\r\n                this.applyImportStyles(this.importStyles)\r\n            };\r\n        }\r\n    };\r\n\r\n    applyImportStyles(importStyles) {\r\n        let newStyles = {...this.initialStyles};\r\n        Object.keys(newStyles).map((key, index) => {\r\n            if (importStyles[key] && newStyles[key] !== importStyles[key]) {\r\n                newStyles[key] = importStyles[key];\r\n                this.props.updateStyle(key, importStyles[key]);\r\n            } else {\r\n                this.props.updateStyle(key, newStyles[key]);\r\n            }\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps !== this.props) {\r\n            this.newStyles = {...nextProps.styles};\r\n\r\n            Object.keys(this.newStyles).map((key, index) => {\r\n\r\n                if (key === \"textValue\" || key === \"backgroundColor\") return;\r\n\r\n                if (this.newStyles[key] !== this.initialStyles[key]) {\r\n                    this.changedStyles[key] = this.newStyles[key];\r\n                }\r\n                if (this.changedStyles[key] && this.newStyles[key] === this.initialStyles[key]) {\r\n                    delete this.changedStyles[key];\r\n                }\r\n                if (this.changedStyles[key] && key === \"fill\" && this.newStyles[key].length === 1 &&\r\n                    this.newStyles[key][0] === this.initialStyles[key]) {\r\n                    delete this.changedStyles[key];\r\n                }\r\n                if (this.changedStyles[key] && key === \"fillGradientStops\" && !this.newStyles[key].length) {\r\n                    delete this.changedStyles[key];\r\n                }\r\n            });\r\n\r\n\r\n            this.jsonStyles = Object.keys(this.changedStyles).map((key, index) => {\r\n                let value = this.changedStyles[key];\r\n                let valueHtml = null;\r\n\r\n                if (typeof value === \"string\" || (typeof value === \"object\" && value.length === 1)) {\r\n                    valueHtml = <span className=\"json-value\"> \"{value}\"</span>\r\n                } else if (typeof value === \"number\") {\r\n                    valueHtml = <span className=\"json-value\"> {value}</span>\r\n                } else if (typeof value === \"boolean\") {\r\n                    valueHtml = <span className=\"json-value\"> {value.toString()}</span>\r\n                }\r\n                if ((typeof value === \"object\" && value.length > 1) || key === \"fillGradientStops\") {\r\n                    let valArr = <span> [<span className=\"json-value\"> {\r\n                        Object.keys(value).map((valueKey, valueIndex) => {\r\n                            let val = value[valueKey];\r\n                            val = typeof value[valueKey] === \"string\" ? `\"` + val + `\"` : val;\r\n                            let comma = valueIndex === Object.keys(value).length - 1 ? '\\n' : ', ';\r\n                            return <div\r\n                                key={valueKey}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{val}{comma}</div>;\r\n                        })\r\n                    }</span>&nbsp;&nbsp;&nbsp;&nbsp;]</span>;\r\n                    valueHtml = valArr\r\n                }\r\n\r\n                return <div key={key}>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <span className=\"json-attr\">\"{key}\"</span>:\r\n                    {valueHtml}\r\n                    {index === Object.keys(this.changedStyles).length - 1 ? '' : ','}\r\n                </div>;\r\n            });\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <pre className={\"jsonFormatter\"}>\r\n                <code>\r\n                    &#123;\r\n                    {this.jsonStyles}\r\n                    &#125;\r\n                </code>\r\n            </pre>\r\n\r\n            <div className=\"btn-group pull-right\">\r\n                <button className=\"btn btn-primary btn-file\">\r\n                    <input type=\"file\" accept=\".json\" onChange={this.importJson}/>\r\n                    <i className=\"uil uil-import\"></i> import\r\n                </button>\r\n                <button className=\"btn btn-primary\" onClick={this.exportToJson}>\r\n                    <i className=\"uil uil-export\"></i> export\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    styles: state.styleApp\r\n});\r\n\r\nexport default compose(\r\n    withAccordion,\r\n    connect(mapStateToProps, { updateStyle })\r\n)(JsonViewerContainer)","import React from 'react';\r\nimport {PixiComponent} from '@inlet/react-pixi';\r\nimport {Text} from 'pixi.js';\r\n\r\nconst PixiPreview = ({styles}) => {\r\n    let {textValue, ...style} = styles;\r\n\r\n    const PixiText = PixiComponent('PixiText', {\r\n        create: props => new Text(props)\r\n    });\r\n\r\n    return (\r\n        <PixiText text={textValue} style={style} />\r\n    )\r\n};\r\n\r\nexport default PixiPreview;","import React from 'react';\r\nimport PixiPreview from \"./PixiPreview\";\r\nimport {connect} from \"react-redux\";\r\nimport {Container, Stage} from \"@inlet/react-pixi\";\r\nimport Dimensions from 'react-dimensions'\r\nimport {compose} from \"redux\";\r\nimport {updateSetting} from \"../../redux/settings-reducer\";\r\n\r\nclass PixiPreviewContainer extends React.Component {\r\n\r\n    state = {\r\n        height: 400,\r\n        // moveCanvas: false\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.updateSetting(\"previewWidth\", document.getElementsByClassName(\"appWrapper\")[0].offsetWidth - 370);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.containerWidth !== this.props.containerWidth) {\r\n            let elem = document.getElementById(\"canvasContainer\");\r\n            elem.style.width = nextProps.containerWidth + 'px';\r\n            this.props.updateSetting(\"previewWidth\", nextProps.containerWidth);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    resizePreview = (e) => {\r\n        e.preventDefault();\r\n        if (e.button.toString()) {\r\n            e.which = e.button + 1;\r\n        }\r\n        if (e.which !== 1) return;\r\n\r\n        let elem = document.getElementById(\"canvasContainer\");\r\n        let container = document.getElementById(\"previewContainer\");\r\n        let canMove = true;\r\n        let width;\r\n        let height;\r\n\r\n        document.addEventListener('mousemove', (e) => {\r\n            if (canMove) {\r\n\r\n                width = e.pageX - elem.offsetLeft;\r\n                height = e.pageY - elem.offsetTop;\r\n\r\n                if (width < container.offsetWidth - 30 && width > 300) {\r\n                    elem.style.width = width + 'px';\r\n                    this.props.updateSetting('previewWidth', width);\r\n                }\r\n                if (height > 200) {\r\n                    elem.style.height = height + 'px';\r\n                    this.setState({\r\n                        height: height\r\n                    });\r\n                }\r\n            }\r\n        }, false);\r\n\r\n        document.addEventListener('mouseup', (e) => {\r\n            canMove = false;\r\n        }, false);\r\n    };\r\n\r\n    movePixiContainer = (e) => {\r\n        e.preventDefault();\r\n        if (e.button.toString()) {\r\n            e.which = e.button + 1;\r\n        }\r\n        if (e.which !== 1) return;\r\n\r\n        let canMove = true;\r\n        let width;\r\n        let height;\r\n\r\n        // this.setState({\r\n        //     moveCanvas: true\r\n        // });\r\n\r\n        document.addEventListener('mousemove', (e) => {\r\n            if (canMove) {\r\n\r\n                if (this.props.settings.moveCanvas) {\r\n\r\n                    width = this.props.settings.canvasPosX + e.movementX;\r\n                    height = this.props.settings.canvasPosY + e.movementY;\r\n\r\n                    this.props.updateSetting(\"canvasPosX\", width);\r\n                    this.props.updateSetting(\"canvasPosY\", height);\r\n\r\n                } else {\r\n\r\n                    width = this.props.settings.bgPosX + e.movementX;\r\n                    height = this.props.settings.bgPosY + e.movementY;\r\n\r\n                    this.props.updateSetting(\"bgPosX\", width);\r\n                    this.props.updateSetting(\"bgPosY\", height);\r\n                }\r\n\r\n            }\r\n        }, false);\r\n\r\n        document.addEventListener('mouseup', (e) => {\r\n            canMove = false;\r\n            // this.setState({\r\n            //     moveCanvas: false\r\n            // });\r\n        }, false);\r\n    };\r\n\r\n    resizeBg = (e) => {\r\n        if (!!this.props.settings.bgImage) {\r\n            let value = 0;\r\n            if (e.deltaY < 0) {\r\n                value += 5;\r\n            } else {\r\n                value -= 5;\r\n            }\r\n\r\n            let bgSize = parseInt(this.props.settings.bgSize, 10) || 100;\r\n            this.props.updateSetting(\"bgSize\", `${bgSize + value}%`);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={`canvasContainer`} id={\"canvasContainer\"} //${this.state.moveCanvas ? \"mouseMove\" : \"\"}\r\n                 style={{\r\n                     backgroundColor: this.props.styles.backgroundColor,\r\n                     backgroundImage: `url(${this.props.settings.bgImage})`,\r\n                     backgroundPositionX: this.props.settings.bgPosX,\r\n                     backgroundPositionY: this.props.settings.bgPosY,\r\n                     backgroundSize: this.props.settings.bgSize,\r\n                 }}>\r\n\r\n                <Stage width={this.props.settings.previewWidth} height={this.state.height}\r\n                       options={{transparent: true}} onMouseDown={this.movePixiContainer} onWheel={this.resizeBg} >\r\n                    <Container x={this.props.settings.canvasPosX} y={this.props.settings.canvasPosY}>\r\n                        <PixiPreview {...this.props} />\r\n                    </Container>\r\n                </Stage>\r\n                <div className={\"resizeArea\"} id={\"resizeArea\"} onMouseDown={this.resizePreview}>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    styles: state.styleApp,\r\n    settings: state.settingsApp\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {updateSetting}),\r\n    Dimensions()\r\n)(PixiPreviewContainer);","import React, {useEffect, useState} from 'react';\r\n\r\nconst CheckMoveContainer = ({settings, updateSetting}) => {\r\n\r\n    let [moveCanvasValue, setMoveCanvas] = useState(settings.moveCanvas);\r\n\r\n    useEffect(() => {\r\n        setMoveCanvas(settings.moveCanvas);\r\n    }, [settings.moveCanvas]);\r\n\r\n    const checkMove = (e) => {\r\n        let value = e.currentTarget.id === \"moveCanv\";\r\n        setMoveCanvas(value);\r\n        updateSetting(\"moveCanvas\", value);\r\n    };\r\n\r\n    return (\r\n        <div className={\"checkboxTools\"}>\r\n            Move\r\n            <input className=\"checkbox-tools\" type=\"radio\" name=\"tools\" id=\"moveCanv\" checked={moveCanvasValue} onChange={checkMove} />\r\n            <label className=\"for-checkbox-tools\" htmlFor=\"moveCanv\">\r\n                canvas\r\n            </label>\r\n\r\n            <input className=\"checkbox-tools\" type=\"radio\" name=\"tools\" id=\"moveBg\"  onChange={checkMove} />\r\n            <label className=\"for-checkbox-tools\" htmlFor=\"moveBg\">\r\n                background\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CheckMoveContainer;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport JsonViewerContainer from \"../JsonViewer/JsonViewerContainer\";\r\nimport PixiPreviewContainer from \"../PixiPreview/PixiPreviewContainer\";\r\nimport CheckMoveContainer from \"../Navbar/settings/CheckMoveContainer\";\r\nimport {updateSetting} from \"../../redux/settings-reducer\";\r\n\r\nclass PreviewContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={`appWrapper ${this.props.settings.navOpen ? \"menuOpen\" : \"menuClose\"}`}>\r\n                <div className={\"col-sm-12\"} id={\"previewContainer\"}>\r\n                    <div className={\"previewTopLine\"}>\r\n                        <h3 className={\"previewTitle\"}>Preview</h3>\r\n                        { !! this.props.settings.bgImage &&\r\n                            <CheckMoveContainer settings={this.props.settings} updateSetting={this.props.updateSetting} />\r\n                        }\r\n                    </div>\r\n                    <PixiPreviewContainer />\r\n                </div>\r\n                <div className={\"col-sm-12 jsonViewer\"}>\r\n                    <JsonViewerContainer title={\"JSON\"} elem={\"h2\"}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    settings: state.settingsApp\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateSetting })(PreviewContainer);","import React from 'react';\nimport './App.scss';\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\nimport PreviewContainer from \"./components/Preview/PreviewContainer\";\nimport {connect} from \"react-redux\";\nimport {THEME_DARK} from \"./redux/settings-reducer\";\n\nimport \"../src/assets/css/menuSettings.scss\";\n\nimport \"../src/assets/css/menuRight.scss\";\nimport \"../src/assets/css/menuLeft.scss\";\n\nimport \"../src/assets/css/themeDark.scss\";\nimport \"../src/assets/css/themeLight.scss\";\n\nconst App = ({settings}) => {\n\n    let color = settings.themeColor;\n    const themeColor = localStorage.getItem('themeColor');\n    color = themeColor || color;\n\n    let position = settings.navPosition;\n    const lsPosition = localStorage.getItem('navPosition');\n    position = lsPosition || position;\n\n    let style = color === THEME_DARK ? \"dark\" : \"light\";\n\n    return (\n        <div className={`App ${style} ${position}`}>\n            <PreviewContainer/>\n            <NavbarContainer/>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    settings: state.settingsApp\n});\n\nexport default connect(mapStateToProps, {})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from \"./redux/redux-store\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}